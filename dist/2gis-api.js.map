{"version":3,"sources":["webpack://DGApi/webpack/universalModuleDefinition","webpack://DGApi/webpack/bootstrap","webpack://DGApi/./src/Client.ts","webpack://DGApi/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\",\"amd\":\"axios\",\"root\":\"axios\"}","webpack://DGApi/./src/utils/generateRequestId.ts","webpack://DGApi/./src/models/api/urls.ts","webpack://DGApi/./src/models/api/requests/requestParams.ts","webpack://DGApi/./src/models/api/requests/items/itemsRequestParams.ts","webpack://DGApi/./src/models/api/requests/markers/markersClusteredRequestParams.ts"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","options","apiKey","ridKey","appVersion","axios","params","sendGetRequest","SEARCH_FIRM_URL","SEARCH_QUERY_MARKERS_URL","SEARCH_CLUSTERED_MARKERS_URL","url","convertedParams","keys","reduce","acc","param","toString","finalParams","shv","response","data","result","meta","Error","error","message","T","I","C","length","charCodeAt","encode","split","replace","prepareUrl","map","sort","a","b","item","join","prepareParams","WEB_API_URL","WEB_API3_URL","RUBRICATOR_GET_URL","RUBRICATOR_DASHBOARD_URL","RUBRICATOR_LIST_URL","RUBRICS_TREE_URL","DETECT_REGION_URL","DASHBOARD_ADS_GET_URL","GET_ITEM_URL","SEARCH_GEO_URL","SEARCH_FIRM_MARKERS_URL","SEARCH_REGION_URL","SUGGESTS_URL","OBJECTS_SUGGESTS_URL","PROFILE_URL","REGIONS_URL","REGION_INFO","BRANCH_GET_URL","BRANCH_LIST_URL","GET_ITEM_BY_ENTRACE_URL","ItemField","ItemType","ItemSearchType","ItemSortType","ClusteredMarkerField"],"mappings":"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BACA,yBACA,sBACA,wBACA,2BACA,sBACA,wBACA,0BACA,4BACA,yBACA,0BACA,8BACA,+CACA,sBACA,qCACA,qCACA,kDACA,mCACA,sBACA,2CACA,4CACA,uCACA,0BACA,2CACA,8BACA,wBACA,gCACA,gCACA,iCACA,4BACA,kCACA,0BACA,iCACA,yBACA,wBACA,uCACA,uCACA,+BACA,+BACA,qCACA,yCACA,iCACA,6BACA,0CACA,+BACA,mCACA,uCACA,oBACA,oBACA,mCACA,6BACA,UACA,YACA,cAxDF,CAAY,EAAAA,YAAA,EAAAA,UAAS,KA2DrB,SAAYC,GACV,mBACA,kCACA,gCACA,4BACA,oCACA,6CACA,oCACA,yCACA,8BACA,wCACA,0BACA,sBACA,wBACA,6BACA,cACA,oBACA,cACA,kBACA,kBACA,gBACA,oBACA,+BACA,4BAvBF,CAAY,EAAAA,WAAA,EAAAA,SAAQ,KA0BpB,SAAYC,GACV,wBACA,yBACA,kBACA,YACA,wDACA,qEANF,CAAY,EAAAA,iBAAA,EAAAA,eAAc,KAS1B,SAAYC,GACV,wBACA,sBACA,kBACA,6BACA,iCACA,4CACA,+BACA,2BARF,CAAY,EAAAA,eAAA,EAAAA,aAAY,M,4GC7FxB,SAAYC,GACV,oBACA,0BACA,mCACA,4BACA,0BALF,CAAY,EAAAA,uBAAA,EAAAA,qBAAoB,M","file":"2gis-api.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"axios\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"axios\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"DGApi\"] = factory(require(\"axios\"));\n\telse\n\t\troot[\"DGApi\"] = factory(root[\"axios\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport generateRequestId from './utils/generateRequestId';\nimport { SEARCH_FIRM_URL, SEARCH_QUERY_MARKERS_URL, SEARCH_CLUSTERED_MARKERS_URL } from './models/api/urls';\n// import { ItemField, ItemLocale, ItemType, ItemSearchType } from './models/item';\nimport ErrorResponse from './models/api/responses/ErrorResponse';\nimport {\n  RequestParams,\n  ItemsRequestParams,\n  MarkersRequestParams,\n  MarkersClusteredRequestParams,\n} from './models/api/requests/requestParams';\nimport ItemsResponseResult from './models/api/responses/items/ItemsResponseResult';\n// import RegionSearchResult from './models/api/responses/regions/RegionSearchResult';\nimport { Response } from './models/api/responses/Response';\nimport MarkersResponseResult from './models/api/responses/markers/MarkersResponseResult';\nimport MarkersClusteredResponseResult from './models/api/responses/markers/MarkersClusteredResponseResult';\n\nexport interface ClientOptions {\n  apiKey: string;\n  ridKey: string;\n  appVersion: string;\n}\n\nexport class Client {\n  // для поддержки типов в NodeJS\n  // static default = DGApi;\n  // static Client = Client;\n\n  private apiKey!: string;\n  private ridKey!: string;\n  private appVersion!: string;\n\n  private axios!: AxiosInstance;\n\n  constructor(options: ClientOptions) {\n    this.apiKey = options.apiKey;\n    this.ridKey = options.ridKey;\n    this.appVersion = options.appVersion;\n\n    this.axios = axios.create();\n  }\n\n  // async getRegionList(params?: RegionListRequestParams): Promise<RegionSearchResult> {\n  //   return this.sendGetRequest(REGIONS_URL, params);\n  // }\n\n  async getItems(params: ItemsRequestParams): Promise<ItemsResponseResult> {\n    return this.sendGetRequest(SEARCH_FIRM_URL, params);\n  }\n\n  async getMarkers(params: MarkersRequestParams): Promise<MarkersResponseResult> {\n    return this.sendGetRequest(SEARCH_QUERY_MARKERS_URL, params);\n  }\n\n  async getMarkersClustered(params: MarkersClusteredRequestParams): Promise<MarkersClusteredResponseResult> {\n    return this.sendGetRequest(SEARCH_CLUSTERED_MARKERS_URL, params);\n  }\n\n  async sendGetRequest<S, R>(url: string, params: S): Promise<R> {\n    const convertedParams = Object.keys(params).reduce((acc, param) => {\n      acc[param] = (params as any)[param].toString();\n      return acc;\n    }, {} as any);\n\n    const finalParams: S & RequestParams = {\n      ...convertedParams,\n      key: this.apiKey,\n      shv: this.appVersion,\n    };\n\n    finalParams.r = generateRequestId(url, finalParams, this.ridKey);\n\n    const response: AxiosResponse<Response<R> | ErrorResponse> = await this.axios.get(url, { params: finalParams });\n\n    if ('result' in response.data) {\n      return response.data.result;\n    }\n\n    if ('error' in response.data.meta) {\n      throw new Error(response.data.meta.error.message);\n    }\n\n    throw new Error('Произошла ошибка при выполнении запроса');\n  }\n}\n\nexport * from './models/api/requests/requestParams';\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","function prepareParams(params: any): string {\n  return Object.keys(params)\n    .map(param => ({\n      key: param,\n      value: (params[param] || '').toString(),\n    }))\n    .sort((a, b) => (a.key < b.key ? -1 : a.key > b.key ? 1 : 0))\n    .map(item => item.value)\n    .join('');\n}\n\nfunction prepareUrl(url: string): string {\n  return url.split('?')[0].replace(/^[^/]*\\/\\/[^/]+\\//, '/');\n}\n\nconst T = [22, 4147, 1234, 11];\nconst I = T[0] + T[3];\nconst C = T[1] + T[2];\n\nfunction encode(s: string): number {\n  const t = s.length;\n  let r = C;\n\n  for (let n = 0; n < t; n += 1) {\n    r = r * I + s.charCodeAt(n);\n    r >>>= 0;\n  }\n  return r;\n}\n\nexport default function (url: string, params: any, key: string): number {\n  return encode(prepareUrl(url) + prepareParams(params) + key);\n}\n","export const WEB_API_URL = 'https://catalog.api.2gis.ru/2.0/';\nexport const WEB_API3_URL = 'https://catalog.api.2gis.ru/3.0/';\n// const WEB_API_KEY: 'rurbbn3446';\n\nexport const RUBRICATOR_GET_URL = WEB_API3_URL + 'rubricator/get';\nexport const RUBRICATOR_DASHBOARD_URL = WEB_API3_URL + 'rubricator/dashboard';\nexport const RUBRICATOR_LIST_URL = WEB_API3_URL + 'rubricator/list';\nexport const RUBRICS_TREE_URL = WEB_API_URL + 'catalog/rubric/list';\nexport const DETECT_REGION_URL = WEB_API3_URL + 'dashboard/geo/items';\nexport const DASHBOARD_ADS_GET_URL = WEB_API3_URL + 'ads/advise/gta/online/dashboard';\nexport const SEARCH_FIRM_URL = WEB_API3_URL + 'items';\nexport const GET_ITEM_URL = WEB_API3_URL + 'items/byid';\nexport const SEARCH_GEO_URL = WEB_API_URL + 'geo/search';\nexport const SEARCH_QUERY_MARKERS_URL = WEB_API3_URL + 'markers';\nexport const SEARCH_CLUSTERED_MARKERS_URL = WEB_API3_URL + 'markers/clustered';\nexport const SEARCH_FIRM_MARKERS_URL = WEB_API_URL + 'catalog/marker/search';\nexport const SEARCH_REGION_URL = WEB_API_URL + 'region/search';\nexport const SUGGESTS_URL = WEB_API_URL + 'suggest/list';\nexport const OBJECTS_SUGGESTS_URL = WEB_API3_URL + 'suggests';\nexport const PROFILE_URL = WEB_API3_URL + 'profile/data';\nexport const REGIONS_URL = WEB_API_URL + 'region/list';\nexport const REGION_INFO = WEB_API_URL + 'region/get';\nexport const BRANCH_GET_URL = WEB_API_URL + 'catalog/branch/get';\nexport const BRANCH_LIST_URL = WEB_API_URL + 'catalog/branch/list';\nexport const GET_ITEM_BY_ENTRACE_URL = WEB_API3_URL + 'items/byentrance';\n","export interface RequestParams {\n  key: string;\n  shv?: string;\n  r?: number;\n}\n\nexport * from './items/itemsRequestParams';\n// export * from './regions/regionListRequestParams';\nexport * from './markers/markersClusteredRequestParams';\nexport * from './markers/markersRequestParams';\n","import Locale from 'src/models/dgis/Locale';\n\nexport enum ItemField {\n  Stat = 'items.stat', // данные для формирования сообщений статистики;\n  RegionId = 'items.region_id', // уникальный идентификатор проекта;\n  Point = 'items.point', // координаты точки поиска, заданные в системе координат WGS84 в формате lon, lat;\n  AdmDiv = 'items.adm_div', // принадлежность к административной территории;\n  Dates = 'items.dates', // время внесения информации о филиале в БД;\n  Photos = 'items.photos', // фотографии, связанные с организацией;\n  SeeAlso = 'items.see_also', // список рекламодателей для блока «смотри также»;\n  Flags = 'items.flags', // список признаков объекта;\n  Locale = 'items.locale', // текущая локаль для региона;\n  Address = 'items.address', // адрес, по которому располагается объект;\n  Schedule = 'items.schedule', // расписание работы филиала;\n  NameEx = 'items.name_ex', // составные части наименования объекта;\n  Reviews = 'items.reviews', // отзывы об объекте;\n  Options = 'items.ads.options', // рекламные опции;\n  IsConditional = 'items.address.is_conditional', // флаг «условного адреса»;\n  Links = 'items.links', // связанные объекты;\n  UpdatedAt = 'items.dates.updated_at', // дата последнего изменения информации об организации в формате ISO 8601;\n  DeletedAt = 'items.dates.deleted_at', // дата удаления организации из базы в формате ISO 8601;\n  IsRoutingAvailable = 'items.is_routing_available', // флаг, возможен ли проезд до объекта;\n  StopFactors = 'items.stop_factors', // набор блокирующих атрибутов, соответствующих запросу;\n  Group = 'items.group', // связанные в объединённую карточку объекты;\n  ExternalContent = 'items.external_content', // дополнительные данные филиала, такие как буклеты и фотографии;\n  FullAddressName = 'items.full_address_name', // то же, что и address_name, но с указанием города;\n  ContactGroups = 'items.contact_groups', // контакты филиала;\n  Rubrics = 'items.rubrics', // рубрики филиала;\n  AttributeGroups = 'items.attribute_groups', // дополнительные атрибуты филиала;\n  RegBcUrl = 'items.reg_bc_url', // URL для регистрации бизнес-коннекшна просмотра профиля;\n  Floors = 'items.floors', // количество этажей;\n  Attraction = 'items.attraction', // описание достопримечательности;\n  Statistics = 'items.statistics', // cводная информация о геообъекте;\n  LevelCount = 'items.level_count', // количество уровней парковки;\n  Capacity = 'items.capacity', // вместимость парковки;\n  Description = 'items.description', // описание геообъекта;\n  Context = 'items.context', // динамическая информация;\n  AccessName = 'items.access_name', // локализованное название типа доступа;\n  IsPaid = 'items.is_paid', // является ли парковка платной;\n  Access = 'items.access', // тип доступа для парковки;\n  AccessComment = 'items.access_comment', // локализованное название для типа доступа;\n  Selection = 'items.geometry.selection', // геометрия для выделения объекта;\n  Hover = 'items.geometry.hover', // геометрия области, используемой для определения попадания курсора в зону объекта;\n  Style = 'items.geometry.style', // идентификатор стиля для отображения;\n  Centroid = 'items.geometry.centroid', // визуальный центр геометрии объекта;\n  IsMainInGroup = 'items.is_main_in_group', // признак того, что это главный объект в группе объектов гибрида.\n  IsPromoted = 'items.is_promoted', // Фирма участвует в промо-акции Чека\n  HasGoods = 'items.has_goods', // загружен список товаров фирмы\n  HasPinnedGoods = 'items.has_pinned_goods', // у фирмы включен блок «Закрепленные товары»\n  HasRealty = 'items.has_realty', // есть недвижимость на продаже\n  HasPayments = 'items.has_payments', // есть возможность оплатить услуги фирмы онлайн\n  SearchAttributes = 'search_attributes', // информация о произведённом поиске;\n  Filters = 'filters', // фильтры для дополнительного поиска;\n  Widgets = 'widgets', // виджеты;\n  ContextRubrics = 'context_rubrics', // массив контекстных рубрик;\n  RequestType = 'request_type', // тип поискового запроса;\n  Cb = 'cb', // контекстный баннер;\n  Dym = 'dym', // блок «Возможно, вы имели ввиду»;\n  Hash = 'hash', // базовый хеш;\n}\n\nexport enum ItemType {\n  AdmDiv = 'adm_div', // административная единица;\n  AdmDivCountry = 'adm_div.country', // страна;\n  AdmDivRegion = 'adm_div.region', // регион (область/край/республика и т.п.);\n  AdmDivCity = 'adm_div.city', // город;\n  AdmDivDistrict = 'adm_div.district', // район;\n  AdmDivDistrictArea = 'adm_div.district_area', // район области;\n  AdmDivDivision = 'adm_div.division', // округ;\n  AdmDivLivingArea = 'adm_div.living_area', // жилмассив, микрорайон;\n  AdmDivPlace = 'adm_div.place', // место;\n  AdmDivSettlement = 'adm_div.settlement', // населённый пункт;\n  Attraction = 'attraction', // достопримечательность;\n  Building = 'building', // здание;\n  Crossroad = 'crossroad', // перекрёсток;\n  FereignCity = 'foreign_city', // населенный пункт, не принадлежащий к текущему проекту;\n  Gate = 'gate', // проход/проезд;\n  Parking = 'parking', // парковка;\n  Road = 'road', // дорога;\n  Street = 'street', // улица;\n  Branch = 'branch', // филиал организации;\n  Route = 'route', // маршрут;\n  Station = 'station', // остановка;\n  StationMetro = 'station.metro', // станция метро;\n  Coordinates = 'coordinates', // глобальная координата.\n}\n\nexport enum ItemSearchType {\n  Discovery = 'discovery', // максимально широкий поиск с возможностью раскрытия связанных объектов (рубрики, соответсвующие запросу, будут раскрыты до входящих в них филиалов);\n  OneBranch = 'one_branch', // идентичен discovery, но для организации будет отдан только один филиал;\n  Indoor = 'indoor', // конфигурация для качественного поиска филиалов в здании;\n  Ads = 'ads', // идентичен discovery, но будут выданы только объекты с рекламой. Кроме того, для организации будет отдан только один первый по ранжированию филиал;\n  DiscoveryPartialSearcher = 'discovery_partial_searcher', // идентичен discovery, но будет задействовано больше вариантов пересечений связей;\n  DiscoveryPartialSearcherStrict = 'discovery_partial_searcher_strict', // идентичен discovery_partial_searcher, но с выключенным префиксным поиском.\n}\n\nexport enum ItemSortType {\n  Relevance = 'relevance', // по убыванию релевантности. В поиске участвует название организации и рубрики, в которые входит организация;\n  Distance = 'distance', // по возрастанию расстояния. Расстояние рассчитывается до центра площадных геообъектов (городов, районов и т.д.) и по кратчайшему расстоянию до линейных (улиц). Если передан параметр sort_point, то расстояние рассчитывается до этой точки;\n  Rating = 'rating', // по убыванию рейтинга;\n  FlampRating = 'flamp_rating', // по убыванию рейтинга флампа;\n  GeneralRating = 'general_rating', // по убыванию рейтинга (алиас rating);\n  DistanceWithoutAds = 'distance_without_ads', // по возрастанию расстояния аналогично distance, но без учёта рекламных весов;\n  CreationTime = 'creation_time', // по убыванию даты создания филиала организации;\n  OpenedTime = 'opened_time', // по убыванию даты открытия.\n}\n\nexport interface ItemsRequestParams {\n  locale?: Locale;\n  q?: string;\n  fields?: ItemField[];\n  type?: ItemType[];\n  search_type?: ItemSearchType;\n  rubric_id?: number[];\n  org_id?: number;\n  is_reviewable_on_flamp?: boolean;\n  has_photos?: boolean;\n  has_rating?: boolean;\n  has_reviews?: boolean;\n  has_reviews_on_flamp?: boolean;\n  has_site?: boolean;\n  work_time?: string;\n  opened_after_date?: string;\n  has_itin?: boolean;\n  has_trade_license?: boolean;\n  allow_deleted?: boolean;\n  sort?: string;\n  sort_point?: string;\n  region_id?: number;\n  district_id?: number[];\n  building_id?: number[];\n  city_id?: number;\n  point1?: string;\n  point2?: string;\n  point?: string;\n  radius?: number;\n  polygon?: string;\n  viewpoint1?: string;\n  viewpoint2?: string;\n  is_viewport_change?: boolean;\n  page?: number;\n  page_size?: number;\n}\n","import { ItemType, ItemSearchType, ItemSortType } from '../items/itemsRequestParams';\nimport Locale from 'src/models/dgis/Locale';\n\nexport enum ClusteredMarkerField {\n  Name = 'items.name', // название объекта;\n  Context = 'items.context', // динамическая информация;\n  StopFactors = 'items.stop_factors', // набор блокирующих атрибутов, соответствующих запросу;\n  Schedule = 'items.schedule', // расписание работы;\n  Reviews = 'items.reviews', // отзывы.\n}\n\nexport interface MarkersClusteredRequestParams {\n  locale?: Locale;\n  fields?: ClusteredMarkerField[];\n  map_width: number;\n  map_height: number;\n  q?: string;\n  type?: ItemType[];\n  search_type?: ItemSearchType;\n  rubric_id?: number[];\n  org_id?: number;\n  is_reviewable_on_flamp?: boolean;\n  has_photos?: boolean;\n  has_rating?: boolean;\n  has_reviews?: boolean;\n  has_reviews_on_flamp?: boolean;\n  has_site?: boolean;\n  work_time?: string;\n  opened_after_date?: string;\n  has_itin?: boolean;\n  has_trade_license?: boolean;\n  allow_deleted?: boolean;\n  sort?: ItemSortType;\n  sort_point?: string;\n  district_id?: number[];\n  building_id?: number[];\n  city_id?: number;\n  polygon?: string;\n  viewpoint1: string;\n  viewpoint2: string;\n  is_viewport_change?: boolean;\n  page?: number;\n  page_size?: number;\n}\n"],"sourceRoot":""}